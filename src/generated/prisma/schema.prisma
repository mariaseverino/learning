generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String  @id @default(uuid())
  name               String
  email              String  @unique
  password           String
  role               String  @default("student")
  isSubscribed       Boolean @default(false)
  stripeCustomerId   String?
  subscriptionStatus String?

  refresh_token RefreshToken?

  courses Course[] @relation("CourseEnrollment")
  // progresses         Progress[]
}

model RefreshToken {
  id        String @id @default(uuid())
  expiresIn Int
  user      User   @relation(fields: [userId], references: [id])
  userId    String @unique

  @@map("refresh_token")
}

model Course {
  id           String   @id @default(uuid())
  title        String
  description  String
  thumbnailUrl String
  progress     Decimal  @default(0)
  createdAt    DateTime @default(now())

  lessons  Lesson[]
  students User[]   @relation("CourseEnrollment")
}

model Lesson {
  id       String  @id @default(uuid())
  title    String
  videoUrl String
  order    Int     @default(autoincrement())
  done     Boolean @default(false)

  courseId String
  course   Course @relation(fields: [courseId], references: [id])

  // progresses Progress[]
}

// model Progress {
//   id        String     @id @default(uuid())
//   userId    String
//   lessonId  String
//   completed Boolean

//   user      User       @relation(fields: [userId], references: [id])
//   lesson    Lesson     @relation(fields: [lessonId], references: [id])

//   @@unique([userId, lessonId])
// }
